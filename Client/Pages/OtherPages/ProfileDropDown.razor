<div class="btn-group">
     <img src="@(ProfileImage == "" ? "../Images/Profile/defaultProfileImage.png" : ProfileImage)" width="40" height="40" alt="">
     <button class="btn btn-none border-0 dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false" >
         <span class="visually-hidden">Toggle DropDown</span>
     </button>
     <ul class="dropdown-menu mt-2 border-0">
        <li>
            <div class="card">
                <div class="card-body">
                    <ul class="list-group">
                        <li class="list-group-item">
                            <a href="" class="text-primary fw-bold float-start text-decoration-none" style="font-family: Tahoma; cursor:pointer; ">
                                <i class="bi bi-person-gear"></i>
                                Profile
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="card-footer">
                    <button class="btn btn-danger w-100 btn-sm fw-bold" @onclick="LogoutClicked">
                         <i class="bi bi-box-arrow-left"></i>
                         Logout
                    </button>
                </div>
            </div>
        </li>
     </ul>
</div>


@code {
    public string ProfileImage { get; set; } = "";

    async Task LogoutClicked()
    {
        var logoutModel = new UserSession();
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("/identity/account/login", replace:true, forceLoad: true);
    }
}